'use strict';

/* А тепер настав час збільшити обсяги виробництва роботів!

Напиши функцію getPlan, яка приймає 3 аргументи:

startProduction — поточна кількість роботів, яку ми виробляємо за місяць;
numberOfMonths — кількість місяців, протягом якої виробництво має зростати;
percent — відсоток, на який має зростати виробництво щомісяця.
Функція має повертати масив із цілями на кожен місяць (скільки роботів треба виробити щоб дотримуватись запланованого зростання).

Щоб краще зрозуміти, як це працює, розглянемо приклад. Припустимо, нам дано startProduction = 200, numberOfMonths = 3 та percent = 50:

план на перший місяць — 200 + 50% = 300 роботів;
на другий місяць це вже 300 + 50% = 450 роботів;
і нарешті на третій місяць це 450 + 50% = 675 роботів.
В результаті маємо отримати масив [300, 450, 675].

Зверни увагу: ціль на наступний місяць потрібно рахувати на основі попереднього місяця. Якщо число роботів попереднього місяця виявиться дробовим, округли його за допомогою Math.floor.
*/

function getPlan(startProduction, numberOfMonths, percent) {
    let goals = [];
    let currentProduction = startProduction;
  
    for (let i = 0; i < numberOfMonths; i++) {
      currentProduction = Math.floor(currentProduction + currentProduction * percent / 100);
      goals.push(currentProduction);
    }
  
    return goals;
  }

/* Перша партія роботів готова, тепер їх треба перевірити. Усі роботи унікальні, і швидкість руху в кожного своя. 
У цьому завданні тобі потрібно знайти найменшу, найбільшу та середню швидкості роботів.

Напиши функцію getSpeedStatistic, яка приймає масив швидкостей роботів testResults і повертає статистику у вигляді масиву, у якому:

перший елемент — найменша швидкість;
другий елемент — найбільша швидкість;
третій елемент — середнє значення, округлене вниз (використай Math.floor).
Зверни увагу: якщо вхідний масив швидкостей порожній — поверни масив [0, 0, 0].
*/

function getSpeedStatistic(testResults) {
    if (testResults.length === 0) {
      return [0, 0, 0];
    }
  
    let min = testResults[0];
    let max = testResults[0];
    let sum = 0;
  
    for (let n of testResults) {
      if (n < min) {
        min = n;
      }
  
      if (n > max) {
        max = n;
      }
  
      sum += n;
    }
  
    let avarage = Math.floor(sum / testResults.length);
  
    return [min, max, avarage];
  }

  /* Готельна справа нелегка штука. Особливо в наші часи. Grand Mate Hotel оновив свій сайт для бронювання номерів. Нарешті крім номера телефону готелю з'явилася і форма для бронювання. У формі бронювання потрібно ввести кількість гостей. 
  На жаль, програмісти зробили це поле текстовим і тепер готель отримує результати у вигляді "1 гість", "3", "Я і моя мала", "Двійко гостей", "Десь 6". Давай покращимо програмне забезпечення готелю і швидко напишемо для них першу версію функції getGuestsCount, яка прийматиме рядок guestsInput і повертатиме кількість гостей, тільки якщо число стоїть на початку рядка. В інших випадках повертай рядок not a number. Приклади:

  getGuestsCount('Двоє') === 'not a number'
  getGuestsCount('Я буду 1') === 'not a number'
  getGuestsCount('3 людини') === 3
*/

  function getGuestsCount(guestsInput) {
    const match = guestsInput.trim().match(/^(\d+)/);
    return match ? parseInt(match[1], 10) : 'not a number';
}

/* В Mate bank є можливість покласти гроші на депозит під певний відсоток і отримати прибуток через деякий час.

Наприклад, якщо покласти 10000 на 3 роки під 4% річних, отримаємо:

перший рік: 10000 + 4% = 10400 (10000 + 10000 * 0.04);
другий рік: 10400 + 4% = 10816 (10400 + 10400 * 0.04);
третій рік: 10816 + 4% = 11248.64 (10816 + 10816 * 0.04);
чистий прибуток: 11248.64 - 10000 = 1248.64.
Твоє завдання: напиши функцію calculateProfit, яка приймає 3 параметри:

amount — початкова сума, яку ми кладемо на депозит;
percent — річна відсоткова ставка;
period — кількість років (час, на який гроші кладуться на депозит).
Функція повинна розрахувати та повернути суму чистого прибутку за весь час.

*/

function calculateProfit(amount, percent, period) {
  let total = amount;
  let profit = 0;

  for (let i = 1; i <= period; i++) {
    total = total + (total * percent / 100);
    profit = total - amount;
  }

  return profit;
}